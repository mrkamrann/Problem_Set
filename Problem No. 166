/*
Link: https://codeforces.com/contest/833/problem/C
*/

#include <vector>
#include <iostream>
#include <stdexcept>
#include <cassert>

bool CheckConditions(int index, bool condition1, bool condition2, std::vector<int>& left_digits, std::vector<int>& right_digits, std::vector<int>& digit_count) {
    if (condition1 && condition2)
        return true;
    if (index > 18)
        return true;
    for (int digit = 0; digit < 10; ++digit) {
        if (!digit_count[digit] || (!condition1 && digit < left_digits[index]) || (!condition2 && digit > right_digits[index]))
            continue;
        --digit_count[digit];
        bool result = CheckConditions(index + 1, condition1 || digit > left_digits[index], condition2 || digit < right_digits[index], left_digits, right_digits, digit_count);
        ++digit_count[digit];
        if (result)
            return true;
    }
    return false;
}

int CalculateCombinations(int index, int digit, std::vector<int>& left_digits, std::vector<int>& right_digits, std::vector<int>& digit_count) {
    if (index > 18)
        return CheckConditions(0, 0, 0, left_digits, right_digits, digit_count);
    int count = 0;
    for (; digit < 10; ++digit) {
        ++digit_count[digit];
        count += CalculateCombinations(index + 1, digit, left_digits, right_digits, digit_count);
        --digit_count[digit];
    }
    return count;
}

long long InitializeVectors(long long left, long long right) {
  
    if (left < 1 || right > 1000000000000000000LL || left > right) {
        throw std::invalid_argument("Invalid input values");
    }
  
    std::vector<int> left_digits(19, 0), right_digits(19, 0), digit_count(10, 0);
    for (int i = 18; i >= 0; --i, left /= 10)
        left_digits[i] = static_cast<int>(left % 10);

    for (int i = 18; i >= 0; --i, right /= 10)
        right_digits[i] = static_cast<int>(right % 10);
  
    return CalculateCombinations(0, 0, left_digits, right_digits, digit_count);
}

#include <vector>
#include <iostream>
#include <stdexcept>
#include <cassert>

int main() {
   

    long long l, r;
    std::cin >> l >> r;
    std::cout<<InitializeVectors(l, r)<<std::endl;
   
    return 0;
}
