/*

Link: https://leetcode.com/problems/minimum-reverse-operations/description/

Julie is given an integer len and an integer position representing a vector vec of length len where all elements are set to 0's, except 
position which is set to 1. She is also given an integer vector restricted_vec containing restricted positions. Julie can perform the following operation on vec:

Reverse a subarray with size sub_len if the single 1 is not set to a position in restricted_vec.

Return an integer vector answer with len results where the ith result is the minimum number of operations needed to bring the single 1 to position i in vec
or -1 if it is impossible.

Create a C++ Function MinReverseOperations that will return a vector<int> denoting the vector answer.

Use appropriate Error Handling using the stdexcept library for the invalid test cases.

Input Type:

An integer denoting len
An integer denoting position
A vector<int> denoting restricted_vec
An integer denoting sub_len

Input Constraints:

The value of len should be at least 1 and at most 100,000 inclusive.
The value of position should be in the range [0, len - 1] inclusive.
The length of restricted_vec should be at most len - 1 inclusive.
Each value of restricted_vec[i] should be in the range [0, len - 1] inclusive.
The value of sub_len should be in the range [1, len] inclusive.
The value of restricted_vec[i] should not be equal to position.
All values in restricted_vec should be unique.

*/
