/*
Link: https://codeforces.com/contest/1731/problem/F

*/


#include <iostream>
#include <vector>
#include <stdexcept>
#include <cassert>


    long long ComputeResult(long long count, long long multiplier) {
      
        const long long modulus = 998244353;

        if (count < 1 || count > 50) {
            throw std::invalid_argument("count (n) must be between 1 and 50 inclusive.");
        }
        if (multiplier < 2 || multiplier >= modulus) {
            throw std::invalid_argument("multiplier (k) must be between 2 and 998244352 inclusive.");
        }

        if (count == 1) return 0;

        std::vector<long long> results(count + 1);
        results[1] = 1;
        long long power = 1;

        for (std::size_t index = 2; index < static_cast<std::size_t>(count); index++) {
            power = power * multiplier % modulus;
            results[index] = (results[index - 1] + power * index % modulus) % modulus;
        }

        return results[static_cast<std::size_t>(count - 1)] * ((multiplier + 1) * multiplier % modulus * (multiplier - 1) % modulus * 166374059 % modulus) % modulus;
    }


int main() {

  
    

    return 0;
}
