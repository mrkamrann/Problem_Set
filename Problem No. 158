/*
Link: https://codeforces.com/contest/850/problem/E
*/

#include <iostream>
#include <vector>
#include <stdexcept>
#include <cassert>


long long Solve(int len, const std::string& str) {
    if (len < 1 || len > 20) {
        throw std::invalid_argument("len out of range");
    }
    if (str.length() != (1 << len)) {
        throw std::invalid_argument("str length mismatch");
    }
    for (char character : str) {
        if (character != '0' && character != '1') {
            throw std::invalid_argument("str contains invalid characters");
        }
    }
    long long modulus = 1000000007;
    std::vector<long long> count(1 << len, 0);
    std::vector<long long> temp(1 << len, 0);

    for (int i = 0; i < (1 << len); i++) {
        count[i] = (str[i] == '1');
    }

    for (int i = 0; i < len; i++) {
        for (int j = 0; j < (1 << len); j++) {
            temp[j] = count[j];
            temp[j] += (2 * count[j ^ (1 << i)]);
            temp[j] %= modulus;
        }
        for (int j = 0; j < (1 << len); j++) {
            count[j] = temp[j];
        }
    }

    long long result = 0;
    for (int i = 0; i < (1 << len); i++) {
        if (str[i] == '0') {
            result += count[i];
            result %= modulus;
        }
    }

    result *= 3;
    result %= modulus;

    return result;
}

#include <iostream>
#include <vector>
#include <stdexcept>
#include <cassert>

int main() {
    int len;
    std::cin >> len;
    std::string str;
    std::cin >> str;

    long long result = Solve(len, str);
    std::cout << result << std::endl;

    return 0;
}

